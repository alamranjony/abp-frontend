import { FilterDateCategory, ReportCategory } from '@proxy/reports';
import { DateRangeType } from './date-range-type';
import { DeliveryCategory, OrderStatus, OrderType, PaymentStatus, SalesType } from '@proxy/orders';
import { PaymentMethod } from '@proxy/payment';
import { OccasionCode } from '@proxy/recipients';

export class ReportFilterDto {
  fromDate: string;
  toDate: string;
  firstDateRange: DateRangeType;
  secondDateRange: DateRangeType;
  selectedCustomerClassIds: string[];
  selectedCustomerClassNames: string[];
  reportCategory: ReportCategory;
  salesTypeIds: SalesType[];
  salesTypeNames: string[];
  productTypeIds: string[];
  productTypeNames: string[];
  productDepartmentIds: string[];
  productDepartmentNames: string[];
  storeIds: string[];
  storeNames: string[];
  productIds: string[];
  productNames: string[];
  customerIds: string[];
  customerNames: string[];
  salesPersonIds: string[];
  salesPersonNames: string[];
  isIncludePrice: boolean;
  reportTitle: string;
  orderTypeIds: OrderType[];
  orderTypeNames: string[];
  isOverallTotalsOnly: boolean;
  isPrintByTypeOnly: boolean;
  minRange: number;
  maxRange: number;
  numberToRank: number;
  employeeClassIds: string[];
  employeeClassNames: string[];
  filterDateCategory: FilterDateCategory;
  keyword: string;
  minPriceRange: number;
  maxPriceRange: number;
  orderStatus: OrderStatus;
  paymentMethod: PaymentMethod;
  paymentStatus: PaymentStatus;
  occasionCode: OccasionCode;
  deliveryType: DeliveryCategory;
  cancellationReasonIds: string[];
  cancellationReasonNames: string[];
  replacementReasonIds: string[];
  replacementReasonNames: string[];
}
